"use strict";(self.webpackChunkrrg_api_documentation=self.webpackChunkrrg_api_documentation||[]).push([[5659],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>u});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),c=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=c(r),u=n,y=m["".concat(p,".").concat(u)]||m[u]||l[u]||i;return r?a.createElement(y,o(o({ref:t},d),{},{components:r})):a.createElement(y,o({ref:t},d))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5239:(e,t,r)=>{r.d(t,{Z:()=>n});var a=r(7294);const n=e=>{let{collapsible:t,level:r,row:n,request:i,response:o,parameter:s="",dataType:p="string",required:c=!1,description:d="",...l}=e;const[m,u]=(0,a.useState)(!1);return a.createElement(a.Fragment,null,a.createElement("tr",{className:`param-row ${r?`level--${r}`:""} ${t?"collapsible "+(m?"expanded":""):""}`,onClick:()=>{t&&u(!m)}},a.createElement("td",null,a.createElement("div",{className:"param-container"},a.createElement("div",{className:"parameter"},t?a.createElement("i",{className:"bi bi-chevron-"+(m?"down":"right")}):a.createElement(a.Fragment,null),a.createElement("span",null,s)),a.createElement("span",{className:"data-type"},a.createElement("code",null,p)))),i?a.createElement("td",{className:c?"required":""},c?"true":"false"):a.createElement(a.Fragment,null),a.createElement("td",null,d)),m?l.children:a.createElement(a.Fragment,null))}},9062:(e,t,r)=>{r.d(t,{Z:()=>o});var a=r(7462),n=r(7294),i=r(5239);const o=e=>{let{...t}=e;const[r,o]=(0,n.useState)(!0);return n.createElement(i.Z,(0,a.Z)({response:!0},t))}},3725:(e,t,r)=>{r.d(t,{Z:()=>s});var a=r(7462),n=r(7294),i=r(9062);const o=[{parameter:"_id",description:"The reference ID for this tree type."},{parameter:"name",description:"The name of this tree type."},{parameter:"commonName",description:"Common Name/Indigenous Name - Common names are in a variety of languages. When the English name was found, it was used. If only the indigenous name was present, it was used."},{parameter:"culturalSignificance",description:"The cultural use of each species was listed including their edible parts and medicinal uses. These can then be used to decide on species composition in an effort to provide goods for native peoples."},{parameter:"species",description:"The species of this tree type"},{parameter:"lbsCarbonPerYear",dataType:"number",description:"The pounds of carbon this tree type sequesters per year."},{parameter:"yearsOfLife",dataType:"number",description:"The average number of years that carbon sequestering is measured for this tree type, from the date it is first planted."},{parameter:"carbonWeight",dataType:"number",description:"Weight of carbon/tree(lbs) of this tree type."},{parameter:"dryWeight",dataType:"number",description:"Dryweight(lbs) of this tree type. Dryweight is defined as the mass of the tree when dried in an oven, so all moisture is removed."},{parameter:"greenWeightRoots",dataType:"number",description:"Total greenweight including roots(lb) of this tree type. Total weight of wood including above and below the surface."},{parameter:"groundWeight",dataType:"number",description:"Aboveground Weight(Lbs) of this tree type."},{parameter:"habitat",description:"Habitat of this tree type."},{parameter:"nitrogenFixing",description:"Indicates whether the species fixes nitrogen."},{parameter:"dbhRangeStart",dataType:"number",description:"Minimum DBH(in) of this tree type."},{parameter:"dbhRangeEnd",dataType:"number",description:"Maximum DBH(in) of this tree type."},{parameter:"medianDbh",dataType:"number",description:"Median DBH(ft) of this tree type."},{parameter:"heightRangeStart",dataType:"number",description:"Minimum Height(ft) of this tree type."},{parameter:"heightRangeEnd",dataType:"number",description:"Maximum Height(ft) of this tree type."},{parameter:"medianHeight",dataType:"number",description:"Median Height(ft) of this tree type."},{parameter:"elevationRangeStart",dataType:"number",description:"Start(m) of this tree type native elevation range."},{parameter:"elevationRangeEnd",dataType:"number",description:"End(m) of this tree type native elevation range."},{parameter:"medianCarbonWeight",dataType:"number",description:"Total weight(lbs) of carbon stored and sequestered in this tree type, using median DBH and height values."},{parameter:"mortalityCarbonWeight",description:"Weight(lbs) of Carbon Sequestered Adjusted to Mortality."},{parameter:"mortalityLbsCarbonPerYear",description:"Weight(lb) of Carbon Sequestered/Tree Per Year Adjusted to Mortality."},{parameter:"source",description:"Source of this tree type."},{parameter:"methodOfPlanting",description:"Planting varies from seeds, seedlings, greenwood cuttings, graftings,etc."},{parameter:"uses",description:"The uses of this tree type."},{parameter:"image",description:"The image url of this tree type.",dataType:"object",children:[{parameter:"file",dataType:"string",description:"The file path of this tree type."},{parameter:"publicUrl",dataType:"string",description:"The public image url of this tree type."}]}],s=e=>{let{level:t=0,...r}=e;return n.createElement(n.Fragment,null,o.map((e=>e.children?n.createElement(i.Z,{key:e.parameter,parameter:e.parameter,description:e.description,dataType:e.dataType,collapsible:!0,level:t},e.children.map((e=>n.createElement(i.Z,(0,a.Z)({key:e.parameter},e,{level:t+1}))))):n.createElement(i.Z,(0,a.Z)({key:e.parameter},e,{level:t})))))}},8075:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>d});var a=r(7462),n=(r(7294),r(3905)),i=r(3725);const o={},s="GET treeType",p={unversionedId:"rest-api-reference/accounts-client-id/get-tree-type-by-id",id:"rest-api-reference/accounts-client-id/get-tree-type-by-id",title:"GET treeType",description:"",source:"@site/docs/rest-api-reference/accounts-client-id/get-tree-type-by-id.mdx",sourceDirName:"rest-api-reference/accounts-client-id",slug:"/rest-api-reference/accounts-client-id/get-tree-type-by-id",permalink:"/Restoration-Dashboard-API-Documentation/docs/rest-api-reference/accounts-client-id/get-tree-type-by-id",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"GET tree",permalink:"/Restoration-Dashboard-API-Documentation/docs/rest-api-reference/accounts-client-id/get-tree-by-id"},next:{title:"POST order",permalink:"/Restoration-Dashboard-API-Documentation/docs/rest-api-reference/accounts-client-id/post-order"}},c={},d=[{value:"Request",id:"request",level:2},{value:"Response",id:"response",level:2}],l=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",t)},m=l("BaseUrlPath"),u=l("RequestParamTable"),y=l("RequestParamRow"),h=l("ResponseParamTable"),f={toc:d};function g(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"get-treetype"},"GET treeType"),(0,n.kt)("p",null,"Endpoint to retrieve tree type details by the tree type's ID."),(0,n.kt)("h2",{id:"request"},"Request"),(0,n.kt)(m,{mdxType:"BaseUrlPath"},"sites/:SITE_ID/treeTypes/:TREE_TYPE_ID"),(0,n.kt)(u,{route:!0,mdxType:"RequestParamTable"},(0,n.kt)(y,{parameter:"SITE_ID",required:!0,description:"The ID of the site that the tree type is associated with.",mdxType:"RequestParamRow"}),(0,n.kt)(y,{parameter:"TREE_TYPE_ID",required:!0,description:"The ID of the tree type.",mdxType:"RequestParamRow"})),(0,n.kt)("h2",{id:"response"},"Response"),(0,n.kt)(h,{mdxType:"ResponseParamTable"},(0,n.kt)(i.Z,{mdxType:"TreeTypeParamRows"})))}g.isMDXComponent=!0}}]);